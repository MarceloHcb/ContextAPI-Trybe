{"ast":null,"code":"var _jsxFileName = \"/home/mclo/t27b/context/ContextAPI-Trybe/login-context/src/context/auth.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const userToken = localStorage.getItem('user_token');\n    const usersSorage = localStorage.getItem('users_db');\n    if (userToken && usersSorage) {\n      var _JSON$parse;\n      const hasUser = (_JSON$parse = JSON.parse(usersSorange)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.filter(user => user.email === JSON.parse(userToken).email);\n      if (hasUser) setUser(hasUser[0]);\n    }\n  }, []);\n  const signin = (email, password) => {\n    const usersStorage = JSON.parse(localStorage.getItem('user_db'));\n    const hasUser = usersStorage === null || usersStorage === void 0 ? void 0 : usersStorage.filter(user => user.email === email);\n    if (hasUser !== null && hasUser !== void 0 && hasUser.length) {\n      if (hasUser[0].email === email && hasUser[0].password === password) {\n        const token = Math.random().toString(36).substring(2);\n        localStorage.setItem('user_token', JSON.stringify({\n          email,\n          token\n        }));\n        setUser({\n          email,\n          password\n        });\n        return;\n      } else {\n        return 'E-mail ou senha incorretos';\n      }\n    } else {\n      return 'Usuário não cadastrado';\n    }\n  };\n  const signup = (email, password) => {\n    const usersStorage = JSON.parse(localStorage.getItem('users_db'));\n    const hasUser = usersStorage === null || usersStorage === void 0 ? void 0 : usersStorage.filter(user => user.email === email);\n    if (hasUser !== null && hasUser !== void 0 && hasUser.length) {\n      return 'Já tem uma conta com esse E-mail';\n    }\n    let newUser;\n    if (usersStorage) {\n      newUser = [...usersStorage, {\n        email,\n        password\n      }];\n    } else {\n      newUser = [{\n        email,\n        password\n      }];\n    }\n    localStorage.setItem('users_db', JSON.stringify(newUser));\n    return;\n  };\n  const signout = () => {\n    setUser(null);\n    localStorage.removeItem('user_token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      signer: !!user,\n      signin,\n      signup,\n      signout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 6\n  }, this);\n};\n_s(AuthProvider, \"rx0GZvNva+pWKJQEYJD3Jt8h2SA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","userToken","localStorage","getItem","usersSorage","_JSON$parse","hasUser","JSON","parse","usersSorange","filter","email","signin","password","usersStorage","length","token","Math","random","toString","substring","setItem","stringify","signup","newUser","signout","removeItem","Provider","value","signer","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mclo/t27b/context/ContextAPI-Trybe/login-context/src/context/auth.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = ({children}) => {\n    const [user,setUser] = useState();\n\n    useEffect(() => {\nconst userToken = localStorage.getItem('user_token')\nconst usersSorage = localStorage.getItem('users_db')\nif(userToken && usersSorage) {\n    const hasUser = JSON.parse(usersSorange)?.filter(\n        (user) => user.email === JSON.parse(userToken).email)\n        if(hasUser) setUser(hasUser[0])\n}\n    },[])\n\n    const signin = (email, password) => {\n        const usersStorage = JSON.parse(localStorage.getItem('user_db'))\n        const hasUser = usersStorage?.filter((user) => user.email === email)\n\n        if(hasUser?.length) {\n            if (hasUser[0].email === email && hasUser[0].password === password) {\n                const token = Math.random().toString(36).substring(2)\n                localStorage.setItem('user_token', JSON.stringify({email, token}))\n                setUser({email, password})\n                return;                \n            } else {\n                return 'E-mail ou senha incorretos'\n            }\n        }else {\n            return 'Usuário não cadastrado'\n        }\n    }\n\n    const signup = (email, password) => {\n        const usersStorage = JSON.parse(localStorage.getItem('users_db'))\n        const hasUser = usersStorage?.filter((user) => user.email === email)\n\n        if (hasUser?.length) {\n            return 'Já tem uma conta com esse E-mail'\n        }\n        let newUser;\n\n        if(usersStorage) {\n            newUser = [ ...usersStorage, {email, password}];\n\n        }else {\n            newUser = [{email, password}]\n        }\n        localStorage.setItem('users_db', JSON.stringify(newUser))\n        return\n    }\n\n    const signout = () => {\n        setUser(null);\n        localStorage.removeItem('user_token')\n    }\n\n    return(\n     <AuthContext.Provider value={{user, signer: !!user, signin, signup, signout }}>\n        {children}\n        </AuthContext.Provider>\n    )\n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}